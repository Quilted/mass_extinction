<?php
// $Id$

/**
 * @file
 * Receives and parses XML sent from a Flash app via URL POST request.
 * 
 */

/**
 * Implementation of hook_menu().
 */
function flash_data_menu() {
	
	$items = array();
	$items['flash_input'] = array(
		'title' => t('Testing'),
		'page callback' => 'flash_data_receive',
		'access arguments' => array(TRUE),
		'type' => MENU_CALLBACK
	);
	
	return $items;
}

/**
 * Parse XML posted via URL REQUEST POST
 *
 * XML sent can trigger the following options:
 * - Send Achievement
 * - Send Document
 * - Send Research
 * - Send Forum
 * - Send Checkpoint
 */
function flash_data_receive() {
  
	$xml = file_get_contents('php://input');
  $xml = check_markup($xml, 5);
	
	$obj = new xml2array($xml);
	$data = $obj->getResult();
	
	// Gather generic data
	$player_id = $data["game"]["@playerid"];
	$game_id = $data["game"]["@gameid"];
	
	$achievement_id = $data["game"]["achievement"]["@achievementid"];
	$document_id = $data["game"]["document"]["@documentid"];
	$checkpoint = $data["game"]["checkpoint"]["#text"];
	$forum_id = $data["game"]["forum"]["@threadid"];
	$forum_message = $data["game"]["forum"]["#text"];
	$research = $data["game"]["research"]["#text"];
	
	// Prepare string for view
	$output = 'Player ID: ' . $player_id . "\n";
	$output .= 'Game ID: ' . $game_id . "\n";
	if($achievement_id) {
	  $output .= 'Achievement ID: ' . $achievement_id . "\n";
	}
	if($document_id) {
		$output .= 'Document ID: ' . $document_id . "\n";
	}
	if($checkpoint) {
		$output .= 'Checkpoint: ' . $checkpoint . "\n";
	}
	if($forum_id) {
		$output .= 'Forum ID: ' . $forum_id . "\n";
		$output .= 'Forum message: ' . $forum_message . "\n";
	}
	if($research) {
		$output .= 'Research: ' . $research . "\n";
	}
	
	// Create a Flash Data node
	$node = new stdClass();
  $node->title = $game_id . ': ' . date('Y-m-d H:i:s');
  $node->body = $output;
  $node->type = 'flash_data';
  $node->status = 1;
  $node->format = 1;
  node_save($node);
	
}


/**
 * Implementation of hook_nodeapi
 * 
 * Handles updating the flashvars for Flash content type nodes
 */
function flash_data_nodeapi(&$node, $op) {
	if($op == "load" && $node->type == "flashnode") {
		
		global $base_url;
		global $user;
		
		$checkpoint = '29898234';
		$url = $base_url . '/flash_input';
		$player = $user->uid;
		$node->flashnode['flashvars'] = t('checkpoint=@checkpoint&playerId=@player&gameId=@game&post=@url', array('@checkpoint' => $checkpoint, '@player' => $player, '@game' => $node->title, '@url' => $url));
	}
}


/*
 * Excerpted from  
 * http://www.akchauhan.com/convert-xml-to-array-using-dom-extension-in-php5/
 */
class xml2array {
 
	function xml2array($xml) {
		if (is_string($xml)) {
			$this->dom = new DOMDocument;
			$this->dom->loadXml($xml);
		}
 
		return FALSE;
	}
 
	function _process($item) { 
		$occurance = array();
 	
		if(is_array($item->childNodes)) {
			foreach($item->childNodes as $child) {
				$occurance[$child->nodeName]++;
			}
		}
		 
		if($item->nodeType == XML_TEXT_NODE) { 
			$result = html_entity_decode(htmlentities($item->nodeValue, ENT_COMPAT, 'UTF-8'), 
                                     ENT_COMPAT,'ISO-8859-15');
		} 
		else {
			if($item->hasChildNodes()){
				$children = $item->childNodes;
 
				for($i=0; $i<$children->length; $i++) {
					$child = $children->item($i);
 
					if($child->nodeName != '#text') {
						if($occurance[$child->nodeName] > 1) {
							$result[$child->nodeName][] = $this->_process($child);
						}
						else {
							$result[$child->nodeName] = $this->_process($child);
						}
					}
					else if ($child->nodeName == '#text') {
						$text = $this->_process($child);
 
						if (trim($text) != '') {
							$result[$child->nodeName] = $this->_process($child);
						}
					}
				}
			} 
 
			if($item->hasAttributes()) { 
				$attributes = $item->attributes;
 
				if(!is_null($attributes)) {
					foreach ($attributes as $key => $attr) {
						$result["@".$attr->name] = $attr->value;
					}
				}
			}
		}
 
		return $result;
	}
 
	function getResult() {
		return $this->_process($this->dom);
	}
}
